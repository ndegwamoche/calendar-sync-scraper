{"version":3,"file":"index.js","mappings":"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","sources":["webpack://calendar-sync-scraper/./node_modules/react-dom/client.js","webpack://calendar-sync-scraper/./src/App.js","webpack://calendar-sync-scraper/./src/App.scss","webpack://calendar-sync-scraper/./src/Colors.js","webpack://calendar-sync-scraper/./src/Colors.scss","webpack://calendar-sync-scraper/./src/Logs.js","webpack://calendar-sync-scraper/./src/Logs.scss","webpack://calendar-sync-scraper/./src/Settings.js","webpack://calendar-sync-scraper/external window \"React\"","webpack://calendar-sync-scraper/external window \"ReactDOM\"","webpack://calendar-sync-scraper/external window \"ReactJSXRuntime\"","webpack://calendar-sync-scraper/webpack/bootstrap","webpack://calendar-sync-scraper/webpack/runtime/compat get default export","webpack://calendar-sync-scraper/webpack/runtime/define property getters","webpack://calendar-sync-scraper/webpack/runtime/hasOwnProperty shorthand","webpack://calendar-sync-scraper/webpack/runtime/make namespace object","webpack://calendar-sync-scraper/./src/index.js"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useState, useEffect } from 'react';\r\nimport Logs from './Logs';\r\nimport Colors from './Colors';\r\nimport Settings from './Settings';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    const [activeTab, setActiveTab] = useState('main');\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [log, setLog] = useState({ message: '', matches: [] });\r\n    const [formData, setFormData] = useState({\r\n        season: '42024',\r\n        linkStructure: 'https://www.bordtennisportalen.dk/DBTU/HoldTurnering/Stilling/#4,{season},{pool},{group},{region},,,,',\r\n        venue: '',\r\n        region: '4004', // Default to ØST (Sjælland, Lolland F.)\r\n        ageGroup: '4006', // Default to Senior\r\n        pool: '14822', // Default to Pool\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [showDropdowns, setShowDropdowns] = useState(false);\r\n    const [pools, setPools] = useState([]);\r\n    const seasons = window.calendarScraperAjax?.seasons || [];\r\n    const regions = window.calendarScraperAjax?.regions || [];\r\n    const ageGroups = window.calendarScraperAjax?.age_groups || [];\r\n    const levels = window.calendarScraperAjax?.tournament_levels || [];\r\n    const [logInfo, setLogInfo] = useState([]);\r\n\r\n    // Validation function\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n\r\n        // Validate Season\r\n        if (!formData.season) {\r\n            newErrors.season = 'Please select a season.';\r\n        }\r\n\r\n        // Validate Link Structure\r\n        const linkStructureRegex = /^https:\\/\\/www\\.bordtennisportalen\\.dk\\/DBTU\\/HoldTurnering\\/Stilling\\/#4,\\{season\\},\\{pool\\},\\{group\\},\\{region\\},,,,$/;\r\n        if (!formData.linkStructure) {\r\n            newErrors.linkStructure = 'Link structure is required.';\r\n        } else if (!linkStructureRegex.test(formData.linkStructure)) {\r\n            newErrors.linkStructure = 'Link structure must match the expected format.';\r\n        }\r\n\r\n        // Validate Venue\r\n        if (!formData.venue.trim()) {\r\n            newErrors.venue = 'Venue name is required.';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    // Handle input changes\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [name]: value,\r\n        }));\r\n        if (errors[name]) {\r\n            setErrors((prev) => ({\r\n                ...prev,\r\n                [name]: '',\r\n            }));\r\n        }\r\n    };\r\n\r\n    // Fetch dropdown options from DB when season, region, or age group changes\r\n    useEffect(() => {\r\n        if (formData.season) {\r\n            fetch(`${calendarScraperAjax.ajax_url}?action=get_tournament_options&season=${formData.season}&region=${formData.region}&age_group=${formData.ageGroup}&_ajax_nonce=${calendarScraperAjax.nonce}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    if (data.success) {\r\n                        setPools(data.data.pools || []);\r\n                    }\r\n                })\r\n                .catch((error) => console.error('Error fetching pools:', error));\r\n        } else {\r\n            setPools([]);\r\n        }\r\n    }, [formData.season, formData.region, formData.ageGroup]);\r\n\r\n    // Simulate progress while scraping\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isRunning) {\r\n            setProgress(0);\r\n            interval = setInterval(() => {\r\n                setProgress((prev) => {\r\n                    if (prev >= 90) {\r\n                        return 90;\r\n                    }\r\n                    return prev + 10;\r\n                });\r\n            }, 500);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isRunning]);\r\n\r\n    // Fetch logInfo when the \"Log State\" tab is activated\r\n    useEffect(() => {\r\n        if (activeTab === 'log-state') {\r\n            const fetchLogInfo = async () => {\r\n                try {\r\n                    const response = await fetch(`${calendarScraperAjax.ajax_url}?action=get_log_info&_ajax_nonce=${calendarScraperAjax.nonce}`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/x-www-form-urlencoded',\r\n                        },\r\n                    });\r\n                    const data = await response.json();\r\n                    if (data.success) {\r\n\r\n                        const formattedLogs = data.data.map(log => {\r\n\r\n                            const duration = log.close_datetime\r\n                                ? Math.floor((new Date(log.close_datetime) - new Date(log.start_datetime)) / 1000)\r\n                                : null;\r\n\r\n                            return {\r\n                                id: log.id,\r\n                                message: `Scraper run for season ${log.season_id}, status: ${log.status}, matches: ${log.total_matches}`,\r\n                                start_datetime: log.start_datetime,\r\n                                close_datetime: log.close_datetime,\r\n                                duration,\r\n                                status: log.status,\r\n                                details: log.error_message,\r\n                                total_matches: parseInt(log.total_matches, 10),\r\n                            };\r\n                        });\r\n                        setLogInfo(formattedLogs);\r\n                    } else {\r\n                        console.error('Failed to fetch log info:', data.data?.message || 'Unknown error');\r\n                        setLogInfo([]); // Clear logInfo on error\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching log info:', error);\r\n                    setLogInfo([]); // Clear logInfo on error\r\n                }\r\n            };\r\n\r\n            fetchLogInfo();\r\n        }\r\n    }, [activeTab]);\r\n\r\n    const handleRunScraper = async () => {\r\n        if (!validateForm()) {\r\n            setLog({ message: 'Please fix the errors in the form.', matches: [] });\r\n            return;\r\n        }\r\n\r\n        setIsRunning(true);\r\n        setLog({ message: 'Running scraper...', matches: [] });\r\n\r\n        try {\r\n            const response = await fetch(calendarScraperAjax.ajax_url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: new URLSearchParams({\r\n                    action: 'run_calendar_scraper',\r\n                    _ajax_nonce: calendarScraperAjax.nonce,\r\n                    season: formData.season,\r\n                    link_structure: formData.linkStructure,\r\n                    venue: formData.venue,\r\n                    region: formData.region,\r\n                    age_group: formData.ageGroup,\r\n                    pool: formData.pool,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.success) {\r\n                if (data.data.error) {\r\n                    setLog({ message: data.data.error, matches: [] });\r\n                    setProgress(0);\r\n                } else if (Array.isArray(data.data.message) && data.data.message.length === 0) {\r\n                    setLog({ message: 'No matches found for venue ' + formData.venue, matches: [] });\r\n                    setProgress(100);\r\n                } else {\r\n                    setLog({ message: '', matches: data.data.message });\r\n                    setProgress(100);\r\n                }\r\n            } else {\r\n                setLog({ message: data.data?.message || 'Something went wrong.', matches: [] });\r\n                setProgress(0);\r\n            }\r\n        } catch (error) {\r\n            setLog({ message: 'Error: ' + error.message, matches: [] });\r\n            setProgress(0);\r\n        } finally {\r\n            setIsRunning(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrap\">\r\n            <h1>Calendar Sync Scraper</h1>\r\n            <div>\r\n                <h2 className=\"nav-tab-wrapper\">\r\n                    <a\r\n                        href=\"#main\"\r\n                        className={`nav-tab ${activeTab === 'main' ? 'nav-tab-active' : ''}`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setActiveTab('main');\r\n                        }}\r\n                    >\r\n                        Main\r\n                    </a>\r\n                    <a\r\n                        href=\"#sheet-colors\"\r\n                        className={`nav-tab ${activeTab === 'sheet-colors' ? 'nav-tab-active' : ''}`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setActiveTab('sheet-colors');\r\n                        }}\r\n                    >\r\n                        Sheet Colors\r\n                    </a>\r\n                    <a\r\n                        href=\"#log-state\"\r\n                        className={`nav-tab ${activeTab === 'log-state' ? 'nav-tab-active' : ''}`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setActiveTab('log-state');\r\n                        }}\r\n                    >\r\n                        Log State\r\n                    </a>\r\n                    <a\r\n                        href=\"#settings\"\r\n                        className={`nav-tab ${activeTab === 'settings' ? 'nav-tab-active' : ''}`}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setActiveTab('settings');\r\n                        }}\r\n                    >\r\n                        Settings\r\n                    </a>\r\n                </h2>\r\n\r\n                <div id=\"tab-content\">\r\n                    {activeTab === 'main' && (\r\n                        <div id=\"main\" className=\"tab-section active\">\r\n                            <form id=\"calendar-scraper-form\" onSubmit={(e) => e.preventDefault()}>\r\n                                <div className=\"form-section\">\r\n                                    <div className=\"form-control-group\">\r\n                                        <label htmlFor=\"season-select\" className=\"form-label\">Select Season:</label>\r\n                                        <select\r\n                                            id=\"season-select\"\r\n                                            name=\"season\"\r\n                                            className={`form-select ${errors.season ? 'has-error' : ''}`}\r\n                                            value={formData.season}\r\n                                            onChange={handleInputChange}\r\n                                        >\r\n                                            <option value=\"\">-- Select Season --</option>\r\n                                            {seasons.map((season) => (\r\n                                                <option key={season.season_value} value={season.season_value}>\r\n                                                    {season.season_name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    {errors.season && <span className=\"error-message\">{errors.season}</span>}\r\n                                    <a href=\"#\" className=\"advanced-link\" onClick={(e) => { e.preventDefault(); setShowDropdowns(!showDropdowns); }}>Advanced Settings</a>\r\n                                </div>\r\n\r\n                                {showDropdowns && (\r\n                                    <div className=\"form-section dropdown-row\">\r\n                                        <label htmlFor=\"region-select\" className=\"form-label\"></label>\r\n                                        <select\r\n                                            id=\"region-select\"\r\n                                            name=\"region\"\r\n                                            className={`form-select ${errors.region ? 'has-error' : ''}`}\r\n                                            value={formData.region}\r\n                                            onChange={handleInputChange}\r\n                                        >\r\n                                            <option value=\"\">-- Select Region --</option>\r\n                                            {regions.map((region) => (\r\n                                                <option key={region.region_value} value={region.region_value}>\r\n                                                    {region.region_name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n\r\n                                        <select\r\n                                            id=\"age-group-select\"\r\n                                            name=\"ageGroup\"\r\n                                            className={`form-select ${errors.ageGroup ? 'has-error' : ''}`}\r\n                                            value={formData.ageGroup}\r\n                                            onChange={handleInputChange}\r\n                                        >\r\n                                            <option value=\"\">-- Select Age Group --</option>\r\n                                            {ageGroups.map((ageGroup) => (\r\n                                                <option key={ageGroup.age_group_value} value={ageGroup.age_group_value}>\r\n                                                    {ageGroup.age_group_name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n\r\n                                        <select\r\n                                            id=\"pool-select\"\r\n                                            name=\"pool\"\r\n                                            className={`form-select ${errors.pool ? 'has-error' : ''}`}\r\n                                            value={formData.pool}\r\n                                            onChange={handleInputChange}\r\n                                        >\r\n                                            <option value=\"\">-- Select Pool --</option>\r\n                                            {pools.map((pool) => (\r\n                                                <option key={pool.pool_value} value={pool.pool_value}>\r\n                                                    {pool.tournament_level} - {pool.pool_name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className=\"form-section\">\r\n                                    <div className=\"form-control-group\">\r\n                                        <label htmlFor=\"link-structure\" className=\"form-label\">Link Structure:</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"link-structure\"\r\n                                            name=\"linkStructure\"\r\n                                            className={`form-input ${errors.linkStructure ? 'has-error' : ''}`}\r\n                                            value={formData.linkStructure}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"Enter link structure name\"\r\n                                        />\r\n                                    </div>\r\n                                    {errors.linkStructure && <span className=\"error-message\">{errors.linkStructure}</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-section\">\r\n                                    <div className=\"form-control-group\">\r\n                                        <label htmlFor=\"venue\" className=\"form-label\">Venue:</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"venue\"\r\n                                            name=\"venue\"\r\n                                            className={`form-input ${errors.venue ? 'has-error' : ''}`}\r\n                                            value={formData.venue}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder=\"Enter venue name\"\r\n                                        />\r\n                                    </div>\r\n                                    {errors.venue && <span className=\"error-message\">{errors.venue}</span>}\r\n                                </div>\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    id=\"run-scraper-now\"\r\n                                    className=\"button button-primary\"\r\n                                    onClick={handleRunScraper}\r\n                                    disabled={isRunning}\r\n                                >\r\n                                    {isRunning ? 'Running...' : 'Run Scraper Now'}\r\n                                </button>\r\n\r\n                                {isRunning && (\r\n                                    <div id=\"scraper-progress\">\r\n                                        <progress value={progress} max=\"100\"></progress>\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div id=\"scraper-log\" className=\"scraper-log\">\r\n                                    {log.message ? (\r\n                                        <pre>{log.message}</pre>\r\n                                    ) : (\r\n                                        <ul>\r\n                                            {log.matches.map((match, index) => (\r\n                                                <li key={index}>\r\n                                                    Match {match.tid}: {match.hjemmehold} vs {match.udehold} at {match.spillested} - {match.resultat}\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )}\r\n\r\n                    {activeTab === 'sheet-colors' && (\r\n                        <div id=\"sheet-colors\" className=\"tab-section\">\r\n                            <Colors levels={levels} />\r\n                        </div>\r\n                    )}\r\n\r\n                    {activeTab === 'log-state' && (\r\n                        <div id=\"log-state\" className=\"tab-section\">\r\n                            <Logs logInfo={logInfo} />\r\n                        </div>\r\n                    )}\r\n\r\n                    {activeTab === 'settings' && (\r\n                        <div id=\"settings\" className=\"tab-section\">\r\n                            <Settings />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","// extracted by mini-css-extract-plugin\nexport {};","import React, { useState } from 'react';\r\nimport './Colors.scss';\r\n\r\nconst Colors = ({ levels }) => {\r\n    // Predefined colors (10 colors)\r\n    const availableColors = [\r\n        '#FF0000', // Red\r\n        '#00FF00', // Green\r\n        '#0000FF', // Blue\r\n        '#FFFF00', // Yellow\r\n        '#FF00FF', // Magenta\r\n        '#00FFFF', // Cyan\r\n        '#FFA500', // Orange\r\n        '#800080', // Purple\r\n        '#008000', // Dark Green\r\n        '#FFC0CB', // Pink\r\n    ];\r\n\r\n    const [poolColors, setPoolColors] = useState({});\r\n    const [poolFilter, setPoolFilter] = useState('');\r\n    const [selectedPool, setSelectedPool] = useState('');\r\n\r\n    // Filter pools based on search input\r\n    const filteredPools = levels.filter(\r\n        (pool) =>\r\n            !poolColors[pool.pool_value] &&\r\n            (poolFilter === '' ||\r\n                pool.level_name.toLowerCase().includes(poolFilter.toLowerCase()) ||\r\n                pool.tournament_level.toLowerCase().includes(poolFilter.toLowerCase()))\r\n    );\r\n\r\n    // Handle color assignment\r\n    const handleAssignColor = async (poolId, color) => {\r\n        try {\r\n            const response = await fetch(calendarScraperAjax.ajax_url, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                body: new URLSearchParams({\r\n                    action: 'save_pool_color',\r\n                    _ajax_nonce: calendarScraperAjax.nonce,\r\n                    pool_id: poolId,\r\n                    color,\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (data.success) {\r\n                setPoolColors((prev) => ({ ...prev, [poolId]: color }));\r\n                setSelectedPool(''); // Reset dropdown\r\n            } else {\r\n                console.error('Failed to save pool color:', data.data?.message || 'Unknown error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving pool color:', error);\r\n        }\r\n    };\r\n\r\n    // Handle clear colors with confirmation\r\n    const handleClearColors = async () => {\r\n        // if (window.confirm('Are you sure you want to clear all pool color assignments?')) {\r\n        //     try {\r\n        //         const response = await fetch(calendarScraperAjax.ajax_url, {\r\n        //             method: 'POST',\r\n        //             headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        //             body: new URLSearchParams({\r\n        //                 action: 'clear_pool_colors',\r\n        //                 _ajax_nonce: calendarScraperAjax.nonce,\r\n        //             }),\r\n        //         });\r\n        //         const data = await response.json();\r\n        //         if (data.success) {\r\n        //             setPoolColors({});\r\n        //             setSelectedPool('');\r\n        //         } else {\r\n        //             console.error('Failed to clear pool colors:', data.data?.message || 'Unknown error');\r\n        //         }\r\n        //     } catch (error) {\r\n        //         console.error('Error clearing pool colors:', error);\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    return (\r\n        <div id=\"sheet-colors\" className=\"tab-section\">\r\n            <div className=\"form-section\">\r\n                <label htmlFor=\"pool-select-color\" className=\"form-label\">Select Tournament Level:</label>\r\n                <select\r\n                    id=\"pool-select-color\"\r\n                    className=\"form-select\"\r\n                    value={selectedPool}\r\n                    onChange={(e) => setSelectedPool(e.target.value)}\r\n                >\r\n                    <option value=\"\">-- Select Pool --</option>\r\n                    {filteredPools.map((pool) => (\r\n                        <option key={pool.id} value={pool.id}>\r\n                            {pool.level_name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-section\">\r\n                <h4>Available Colors:</h4>\r\n                <div className=\"color-swatches\">\r\n                    {availableColors.map((color) => (\r\n                        <div\r\n                            key={color}\r\n                            className={`color-swatch ${selectedPool ? 'clickable' : 'disabled'}`}\r\n                            style={{ backgroundColor: color }}\r\n                            title={color}\r\n                            onClick={() => {\r\n                                if (selectedPool) {\r\n                                    handleAssignColor(selectedPool, color);\r\n                                }\r\n                            }}\r\n                        ></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-section\">\r\n                <h4>Assigned Colors:</h4>\r\n                {Object.keys(poolColors).length === 0 ? (\r\n                    <p>No colors assigned.</p>\r\n                ) : (\r\n                    <ul>\r\n                        {Object.entries(poolColors).map(([poolId, color]) => {\r\n                            const pool = pools.find((p) => p.pool_value === poolId);\r\n                            return (\r\n                                <li key={poolId}>\r\n                                    {pool ? `${pool.tournament_level} - ${pool.pool_name}` : poolId}:{' '}\r\n                                    <span\r\n                                        className=\"color-swatch\"\r\n                                        style={{ backgroundColor: color }}\r\n                                    ></span>{' '}\r\n                                    {color}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n            <button\r\n                type=\"button\"\r\n                className=\"button button-secondary\"\r\n                onClick={handleClearColors}\r\n            >\r\n                Clear All Colors\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Colors;","// extracted by mini-css-extract-plugin\nexport {};","import React, { useState } from 'react';\r\nimport './Logs.scss';\r\n\r\nconst Logs = ({ logInfo }) => {\r\n    const [expandedRows, setExpandedRows] = useState({});\r\n\r\n    // Toggle expand/collapse for a row\r\n    const toggleExpand = (id) => {\r\n        setExpandedRows((prev) => ({\r\n            ...prev,\r\n            [id]: !prev[id],\r\n        }));\r\n    };\r\n\r\n    // Truncate text to a specified length\r\n    const truncateText = (text, maxLength = 20) => {\r\n        if (!text) return '';\r\n        return text.length > maxLength ? `${text.substring(0, maxLength)}...` : text;\r\n    };\r\n\r\n    // Parse details if it's JSON (e.g., match data)\r\n    const parseDetails = (details) => {\r\n        if (!details || !details.startsWith('[')) {\r\n            return { isJson: false, content: details };\r\n        }\r\n        try {\r\n            const parsed = JSON.parse(details);\r\n            if (Array.isArray(parsed)) {\r\n                return { isJson: true, matches: parsed, summary: `Found ${parsed.length} matches` };\r\n            }\r\n            return { isJson: false, content: details };\r\n        } catch (e) {\r\n            console.error('Failed to parse details as JSON:', e);\r\n            return { isJson: false, content: details };\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"log-viewer\">\r\n            <table className=\"log-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Status</th>\r\n                        <th>Start Datetime</th>\r\n                        <th>End Datetime</th>\r\n                        <th>Dur (s)</th>\r\n                        <th>Records</th>\r\n                        <th>Details</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {logInfo.length === 0 ? (\r\n                        <tr>\r\n                            <td colSpan=\"6\">\r\n                                <div className=\"loader\">Loading...</div>\r\n                            </td>\r\n                        </tr>\r\n                    ) : (\r\n                        logInfo.map((log, index) => {\r\n                            const detailsData = parseDetails(log.details);\r\n                            const isExpanded = expandedRows[log.id || index];\r\n                            return (\r\n                                <React.Fragment key={log.id || index}>\r\n                                    <tr\r\n                                        className={`log-row ${log.status} ${isExpanded ? 'expanded' : ''}`}\r\n                                        onClick={() => toggleExpand(log.id || index)}\r\n                                    >\r\n                                        <td>{log.status === 'completed' ? '✅ Completed' : '❌ Failed'}</td>\r\n                                        <td>{log.start_datetime}</td>\r\n                                        <td>{log.close_datetime || 'N/A'}</td>\r\n                                        <td>{log.duration !== null ? log.duration : 'N/A'}</td>\r\n                                        <td>{log.total_matches}</td>\r\n                                        <td>\r\n                                            {detailsData.isJson\r\n                                                ? truncateText(detailsData.summary, 20)\r\n                                                : truncateText(detailsData.content, 20)}\r\n                                        </td>\r\n                                    </tr>\r\n                                    {isExpanded && detailsData.isJson && (\r\n                                        <tr className=\"log-details\">\r\n                                            <td colSpan=\"6\">\r\n                                                <ul className=\"match-list\">\r\n                                                    {detailsData.matches.map((match, matchIndex) => (\r\n                                                        <li key={matchIndex}>\r\n                                                            Match {match.tid}: {match.hjemmehold} vs {match.udehold} at {match.spillested} - {match.resultat}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                    {isExpanded && !detailsData.isJson && detailsData.content && (\r\n                                        <tr className=\"log-details\">\r\n                                            <td colSpan=\"6\">\r\n                                                <pre>{detailsData.content}</pre>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </React.Fragment>\r\n                            );\r\n                        })\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logs;","// extracted by mini-css-extract-plugin\nexport {};","import React, { useState } from 'react';\r\n\r\nconst Settings = () => {\r\n\r\n    return (\r\n        <div id=\"settings\" className=\"tab-section\">\r\n            <div className=\"form-section\">\r\n                <div className=\"form-control-group\">\r\n                    <label htmlFor=\"pool-select-color\" className=\"form-label\">API Key:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"link-structure\"\r\n                        name=\"linkStructure\"\r\n                        className={`form-input`}\r\n                        placeholder=\"Google calender API key\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React from \"react\";\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"calendar-sync-scraper-root\");\r\n\r\nif (rootElement) {\r\n    const root = createRoot(rootElement);\r\n    root.render(<App />);\r\n}\r\n"],"names":["React","useState","useEffect","Logs","Colors","Settings","jsx","_jsx","jsxs","_jsxs","App","activeTab","setActiveTab","isRunning","setIsRunning","progress","setProgress","log","setLog","message","matches","formData","setFormData","season","linkStructure","venue","region","ageGroup","pool","errors","setErrors","showDropdowns","setShowDropdowns","pools","setPools","seasons","window","calendarScraperAjax","regions","ageGroups","age_groups","levels","tournament_levels","logInfo","setLogInfo","validateForm","newErrors","linkStructureRegex","test","trim","Object","keys","length","handleInputChange","e","name","value","target","prev","fetch","ajax_url","nonce","method","headers","then","response","json","data","success","catch","error","console","interval","setInterval","clearInterval","fetchLogInfo","formattedLogs","map","duration","close_datetime","Math","floor","Date","start_datetime","id","season_id","status","total_matches","details","error_message","parseInt","handleRunScraper","body","URLSearchParams","action","_ajax_nonce","link_structure","age_group","Array","isArray","className","children","href","onClick","preventDefault","onSubmit","htmlFor","onChange","season_value","season_name","region_value","region_name","age_group_value","age_group_name","pool_value","tournament_level","pool_name","type","placeholder","disabled","max","match","index","tid","hjemmehold","udehold","spillested","resultat","availableColors","poolColors","setPoolColors","poolFilter","setPoolFilter","selectedPool","setSelectedPool","filteredPools","filter","level_name","toLowerCase","includes","handleAssignColor","poolId","color","pool_id","handleClearColors","style","backgroundColor","title","entries","find","p","expandedRows","setExpandedRows","toggleExpand","truncateText","text","maxLength","substring","parseDetails","startsWith","isJson","content","parsed","JSON","parse","summary","colSpan","detailsData","isExpanded","Fragment","matchIndex","createRoot","rootElement","document","getElementById","root","render"],"sourceRoot":""}